/*
 * Copyright (c) 2023 The Greater Heptavirate team (https://github.com/TheGreaterHeptavirate)
 * All Rights Reserved
 *
 * All copies of this software (if not stated otherwise) are dedicated
 * ONLY to personal, non-commercial use.
 */

package aminoacid

import (
	"testing"

	"github.com/TheGreaterHeptavirate/motorola/internal/assets"
	"github.com/stretchr/testify/assert"
)

func TestDatabase_GetFromCodon(t *testing.T) {
	a := assert.New(t)
	db, _ := GetDatabase()
	// GetFromCodon refers to scripts/json-database/
	// values it returns cannot be tested here as long as they are
	// not generated by this code anyhow.
	// The only thing that could be checked here is nil-ness of
	// returns

	acid := db.GetFromCodon("AAA")
	a.NotNil(acid)

	acid = db.GetFromCodon("AUU")
	a.NotNil(acid)

	// now we can check for some unexisting codon
	acid = db.GetFromCodon("INVALID CODON")
	a.Nil(acid)
}

func TestGetDatabase(t *testing.T) {
	// GetDatabase just returns a data structure in form of GO code
	// It does not take any arguments so the only thing we can check in
	// our unittests is whether the configuration is right
	// so whether it returns nil error and isn't nil itself
	got, err := GetDatabase()
	a := assert.New(t)
	a.Nil(err)
	a.NotNil(got)

	// And one more check can be done - lets assume that
	// assets.AminoAcids is nil
	// and check whether the function returns an error
	// and nil database
	assets.AminoAcidsJSON = nil
	got, err = GetDatabase()
	a.NotNil(err)
	a.Nil(got)
}
